{"version":3,"sources":["components/display/Signin.js","store/actions/authActions.js","components/display/SignOut.js","components/display/Navigation.js","components/projects/RubySummary.js","components/projects/RubyList.js","components/search/SearchBar.js","store/actions/rubyActions.js","components/dashboard/Dashboard.js","store/actions/saveActionFavGem.js","utility/Utility.js","components/search/DependencySeach.js","components/projects/RubyGemDetails.js","components/auth/Login.js","components/auth/SignUp.js","components/favorite/DeleteFav.js","components/favorite/FavoriteSummary.js","components/favorite/FavGems.js","components/search/Dependency.js","components/favorite/FavoriteDetails.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/rubyReducer.js","config/fbConfig.js","store/reducer/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","_ref4","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","getState","_ref3","getFirebase","firebase","wrap","_context2","prev","next","sent","auth","type","t0","console","log","stop","this","_x4","_x5","_x6","apply","arguments","props","react_default","createElement","className","NavLink","to","onClick","profile","initials","SignOut","state","links","uid","display_Signin","display_SignOut","Link","RubySummary","_ref","gem","name","authors","info","ruby","map","idx","key","projects_RubySummary","SearchBar","input","handleChange","e","_this","setState","defineProperty","target","id","value","handleSubmit","preventDefault","rubyFetch","onSubmit","htmlFor","onChange","Component","rubyGems","gems","term","length","undefined","_callee","url","res","_context","concat","axios","get","data","error","_x","fetchRuby","Dashboard","search_SearchBar","projects_RubyList","compose","firestoreConnect","collection","saveGem","favorite","_ref2","getFirestore","firestore","favorites","doc","update","FieldValue","arrayUnion","_x2","_x3","Utility","version","downloads","DependencySeach","dependencyClick","dependency","el","_this2","requirements","RubyGemDetails","profileFav","some","alert","addGem","history","push","_this$props","dependencies","development","search_DependencySeach","utility_Utility","ownProps","match","params","fav","Login","email","password","signIn","authError","Redirect","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","_ref6","_callee3","_ref5","_context3","createUserWithEmailAndPassword","user","set","_x7","_x8","_x9","DeleteFav","delete","remove","arrayRemove","removeGem","FavoriteSummary","author","FavGems","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextProps","nextState","favorite_FavoriteSummary","favorite_DeleteFav","Dependency","FavoriteDetails","favGem","App","BrowserRouter","display_Navigation","Switch","Route","exact","path","component","Boolean","window","location","hostname","initialState","authReducer","action","objectSpread","message","favoriteGem","fetchingGemReducer","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","rootReducer","combineReducers","firestoreReducer","firebaseReducer","middleware","applyMiddleware","logger","thunkMiddleware","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxReset","persistConfig","storage","blacklist","persistedReducer","persistReducer","store","createStore","persistor","persistStore","firebaseAuthIsReady","then","ReactDOM","render","react_redux_es","integration_react","loading","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1df0576b.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst Signin = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/favorite\"> Favorites </NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}> Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\nexport default connect(\n  null,\n  mapDispatch\n)(Signin);\n","export const signIn = credentials => async (\n  dispatch,\n  getState,\n  { getFirebase }\n) => {\n  try {\n    const firebase = await getFirebase();\n    await firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password);\n    dispatch({ type: \"LOGIN_SUCCESS\" });\n  } catch (error) {\n    dispatch({ type: \"LOGIN_ERROR\", error });\n  }\n};\n\nexport const signOut = () => async (dispatch, getState, { getFirebase }) => {\n  try {\n    const firebase = await getFirebase();\n    await firebase.auth().signOut();\n    dispatch({ type: \"SIGNOUT_SUCCESS\" });\n    dispatch({ type: \"RESET\" });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signUp = newUser => async (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  try {\n    const firebase = await getFirebase();\n    const firestore = await getFirestore();\n    const data = await firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password);\n    await firestore\n      .collection(\"users\")\n      .doc(data.user.uid)\n      .set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    dispatch({ type: \"SIGNUP_SUCCESS\" });\n  } catch (error) {\n    dispatch({ type: \"SIGNUP_ERROR\", error });\n  }\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignOut = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\"> Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\"> Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignOut;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Signin from \"./Signin\";\nimport SignOut from \"./SignOut\";\nimport { connect } from \"react-redux\";\n\nconst Navigation = props => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <Signin profile={profile} /> : <SignOut />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Home\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapState = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\nexport default connect(mapState)(Navigation);\n","import React from \"react\";\n// import RubyGemDetails from \"./RubyGemDetails\";\n\nconst RubySummary = ({ gem }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{gem.name}</span>\n        <p>created by {gem.authors}</p>\n        <p className=\"grey-text\">{gem.info}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default RubySummary;\n","import React from \"react\";\nimport RubySummary from \"./RubySummary\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst RubyList = ({ auth, ruby }) => {\n  // if (!auth.uid) return <Redirect to=\"/signin\" />;\n  return (\n    <div className=\"project-list section\">\n      {ruby &&\n        ruby.map((gem, idx) => {\n          return (\n            <Link to={\"/project/\" + idx} key={idx}>\n              <RubySummary gem={gem} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nconst mapState = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapState)(RubyList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchRuby } from \"../../store/actions/rubyActions\";\n\nclass SearchBar extends Component {\n  state = {\n    input: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.rubyFetch(this.state);\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text tex-darken-3\">Search for Ruby Gem</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"input\">search</label>\n            <input type=\"text\" id=\"input\" onChange={this.handleChange} />\n          </div>\n          <button className=\"btn pink lighten-1 z-depth-0\">Search</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    rubyGems: state.ruby.gems\n  };\n};\nconst mapDispatch = dispatch => {\n  return {\n    rubyFetch: term => dispatch(fetchRuby(term))\n  };\n};\nexport default connect(\n  mapState,\n  mapDispatch\n)(SearchBar);\n","import axios from \"axios\";\n\nexport const fetchRuby = (term = null) => async dispatch => {\n  try {\n    const url = await `http://localhost:8000/api/v1/search.json?query=${\n      term.input\n    }`;\n    const res = await axios.get(url);\n    const gems = res.data;\n    dispatch({ type: \"FETCH_RUBY\", gems });\n  } catch (error) {\n    dispatch({ type: \"FETCHING_GEMS_ERROR\", error });\n  }\n};\n\nexport const fetchDependencies = term => async dispatch => {\n  try {\n    const url = await `http://localhost:8000/api/v1/search.json?query=${term}`;\n    console.log(\"term\", term);\n    console.log(url);\n    const res = await axios.get(url);\n    const gem = await res.data[0];\n    // console.log(\"GEMS\", gems[0]);\n    dispatch({ type: \"FETCH_RUBY_DEPENDENCY\", gem });\n  } catch (error) {\n    dispatch({ type: \"FETCHING_DEPENDENCY_ERROR\", error });\n  }\n};\n","import React, { Component } from \"react\";\nimport RubyList from \"../projects/RubyList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport SearchBar from \"../search/SearchBar\";\n\nclass Dashboard extends Component {\n  render() {\n    const { ruby } = this.props;\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"container\">\n          <h1 className=\"home__heading\">Find RubyGems</h1>\n          <div className=\"home-search\">\n            <SearchBar />\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12 m12\">\n              <RubyList ruby={ruby} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    auth: state.firebase.auth,\n    ruby: state.ruby.gems\n  };\n};\n\nexport default compose(\n  connect(mapState),\n  firestoreConnect([{ collection: \"users\" }])\n)(Dashboard);\n","import firebase from \"firebase\";\nexport const saveGem = favorite => async (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  try {\n    const firestore = await getFirestore();\n    const data = await getState();\n    const favorites = await firestore\n      .collection(\"users\")\n      .doc(data.firebase.auth.uid)\n      .update({\n        favorites: firebase.firestore.FieldValue.arrayUnion(favorite)\n      });\n    dispatch({ type: \"SAVE_GEM\", favorites });\n  } catch (error) {\n    dispatch({ type: \"SAVE_GEM_ERROR\", error });\n  }\n};\n\nexport const removeGem = gem => async (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  try {\n    const firestore = await getFirestore();\n    const data = await getState();\n    const remove = await firestore\n      .collection(\"users\")\n      .doc(data.firebase.auth.uid)\n      .update({\n        favorites: firebase.firestore.FieldValue.arrayRemove(gem)\n      });\n    dispatch({ type: \"REMOVE_GEM_SUCCESS\", remove });\n  } catch (error) {\n    dispatch({ type: \"REMOVE_GEM_FAIL\", error });\n  }\n};\n","import React from \"react\";\n\nconst Utility = props => {\n  return (\n    <div className=\"container section project-RubyGemDetails\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <div className=\"l-wrap--b\">\n            <h1 className=\"t-display page__heading\">\n              {props.gem.name}\n              <i className=\"page__subheading\">{props.gem.version}</i>\n            </h1>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>posted by {props.gem.authors}</div>\n            <div>Downloaded {props.gem.downloads}</div>\n          </div>\n          <div className=\"loverflow\">\n            <div className=\"l-colspan--l colspan--l--has-border\">\n              <div className=\"props.gems-intro\">\n                <div className=\"gem_desc\">\n                  <p>{props.gem.info}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Utility;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchDependencies } from \"../../store/actions/rubyActions\";\n\nclass DependencySeach extends Component {\n  dependencyClick = e => {\n    e.preventDefault();\n    this.props.dependency(this.props.el.name);\n  };\n\n  render() {\n    const { el } = this.props;\n    return (\n      <li onClick={e => this.dependencyClick(e)}>\n        <Link to={\"/dependency/\" + el.name} className=\"list-dependencies\">\n          <strong id={el.name}>{el.name}</strong>\"{el.requirements}\"\n        </Link>\n      </li>\n    );\n  }\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    dependency: name => dispatch(fetchDependencies(name))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatch\n)(DependencySeach);\n","import React, { Component } from \"react\";\nimport { saveGem } from \"../../store/actions/saveActionFavGem\";\nimport { connect } from \"react-redux\";\nimport Utility from \"../../utility/Utility\";\nimport DependencySearch from \"../search/DependencySeach\";\n\nclass RubyGemDetails extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.props.profileFav.some(el => el.name === this.props.gems.name)) {\n      alert(\"Ruby Gem already saved\");\n    } else {\n      alert(\"Ruby Gem saved to your favorite\");\n      this.props.addGem(this.props.gems);\n      this.props.history.push(\"/\");\n    }\n  };\n  render() {\n    const { auth, gems } = this.props;\n    const dependencies = gems.dependencies.development ? (\n      gems.dependencies.development.map((el, idx) => {\n        return (\n          <div key={idx}>\n            <DependencySearch el={el} />\n          </div>\n        );\n      })\n    ) : (\n      <div>Loading ruby...</div>\n    );\n\n    if (gems) {\n      if (auth.uid) {\n        return (\n          <div className=\"container section project-RubyGemDetails\">\n            <div className=\"card z-depth-0\">\n              <div className=\"card-content\">\n                <Utility gem={gems} />\n                <h3>Dependencies</h3>\n                {dependencies}\n                <div />\n              </div>\n              <form onSubmit={this.handleSubmit} className=\"white\">\n                <button className=\"btn pink lighten-1 z-depth-0\">\n                  Save to favorite\n                </button>\n              </form>\n            </div>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"container section project-RubyGemDetails\">\n            <div className=\"card z-depth-0\">\n              <div className=\"card-content\">\n                <Utility gem={gems} />\n                <h3>Dependencies</h3>\n                {dependencies}\n                <div />\n              </div>\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div className=\"container center\">\n          <p>Loading project...</p>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const ruby = state.ruby.gems;\n  const gem = ruby ? ruby[id] : null;\n  return {\n    auth: state.firebase.auth,\n    gems: gem,\n    profileFav: state.firebase.profile.favorites\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    addGem: fav => dispatch(saveGem(fav))\n  };\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(RubyGemDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text tex-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\" />\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nconst mapState = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Login);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      //grab whatever is type in the input\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    //whatever is submited\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text tex-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <div className=\"input-field\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\nconst mapDispatch = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\nexport default connect(\n  mapState,\n  mapDispatch\n)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeGem } from \"../../store/actions/saveActionFavGem\";\n\nclass DeleteFav extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.delete(this.props.fav);\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"white\">\n        <button className=\"btn pink lighten-1 z-depth-0\">\n          Remove from favorite\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    delete: gem => dispatch(removeGem(gem))\n  };\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(DeleteFav);\n","import React from \"react\";\n\nconst FavoriteSummary = ({ fav }) => {\n  return (\n    <div className=\"card-content grey-text text-darken-3\">\n      <span className=\"card-title\">{fav.name}</span>\n      <p>created by {fav.author}</p>\n      <p className=\"grey-text\">{fav.info}</p>\n    </div>\n  );\n};\n\nexport default FavoriteSummary;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport DeleteFav from \"./DeleteFav\";\nimport FavoriteSummary from \"./FavoriteSummary\";\n\nclass FavGems extends Component {\n  constructor(props) {\n    super();\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.favorite !== this.props.favorite;\n  }\n  render() {\n    const { auth, favorite } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container section project-RubyGemDetails\">\n        <h1>Favorite page</h1>\n        {favorite ? (\n          favorite.map((fav, idx) => {\n            return (\n              <div\n                className=\"container section project-RubyGemDetails\"\n                key={idx}\n              >\n                <div className=\"card z-depth-0 project-summary\">\n                  <Link to={\"/favoritedetails/\" + idx}>\n                    {/* <div className=\"card-content grey-text text-darken-3\">\n                      <span className=\"card-title\">{fav.name}</span>\n                      <p>created by {fav.authors}</p>\n                      <p className=\"grey-text\">{fav.info}</p>\n                    </div> */}\n                    <FavoriteSummary fav={fav} />\n                  </Link>\n                  <DeleteFav fav={fav} />\n                </div>\n\n                <div />\n              </div>\n            );\n          })\n        ) : (\n          <div className=\"container center\">\n            <p>Loading project...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    auth: state.firebase.auth,\n    favorite: state.firebase.profile.favorites\n  };\n};\n\nexport default compose(\n  connect(mapState),\n  firestoreConnect(props => {\n    return [\n      {\n        collection: \"users\",\n        doc: props.auth.uid\n      }\n    ];\n  })\n)(FavGems);\n","import React, { Component } from \"react\";\nimport { saveGem } from \"../../store/actions/saveActionFavGem\";\nimport DependencySearch from \"../search/DependencySeach\";\nimport { connect } from \"react-redux\";\n\nclass Dependency extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.props);\n    if (this.props.profileFav.some(el => el.name === this.props.gems.name)) {\n      alert(\"gem already saved\");\n    } else {\n      alert(\"gem saved to your favorite\");\n      this.props.addGem(this.props.gems);\n      this.props.history.push(\"/\");\n    }\n  };\n  render() {\n    const { gems, auth } = this.props;\n    const dependencies = gems.dependencies.development\n      ? gems.dependencies.development.map((el, idx) => {\n          return (\n            <div key={idx}>\n              <DependencySearch el={el} />\n            </div>\n          );\n        })\n      : null;\n\n    if (gems) {\n      if (auth.uid) {\n        return (\n          <div>\n            <div className=\"container section project-RubyGemDetails\">\n              <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                  <div className=\"l-wrap--b\">\n                    <h1 className=\"t-display page__heading\">\n                      {gems.name}\n                      <i className=\"page__subheading\">{gems.version}</i>\n                    </h1>\n                  </div>\n                  <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>posted by {gems.authors}</div>\n                    <div>Downloaded {gems.downloads}</div>\n                  </div>\n                  <div className=\"loverflow\">\n                    <div className=\"l-colspan--l colspan--l--has-border\">\n                      <div className=\"gemss-intro\">\n                        <div className=\"gem_desc\">\n                          <p>{gems.info}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h3>Dependencies</h3>\n                  {dependencies}\n                </div>\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                  <button className=\"btn pink lighten-1 z-depth-0\">\n                    Save to favorite\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <div className=\"container section project-RubyGemDetails\">\n              <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                  <div className=\"l-wrap--b\">\n                    <h1 className=\"t-display page__heading\">\n                      {gems.name}\n                      <i className=\"page__subheading\">{gems.version}</i>\n                    </h1>\n                  </div>\n                  <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>posted by {gems.authors}</div>\n                    <div>Downloaded {gems.downloads}</div>\n                  </div>\n                  <div className=\"loverflow\">\n                    <div className=\"l-colspan--l colspan--l--has-border\">\n                      <div className=\"gemss-intro\">\n                        <div className=\"gem_desc\">\n                          <p>{gems.info}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <h3>Dependencies</h3>\n                  {dependencies}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div className=\"container center\">\n          <p>Loading project...</p>\n        </div>\n      );\n    }\n  }\n}\nconst mapState = state => {\n  return {\n    gems: state.ruby.ruby,\n    auth: state.firebase.auth,\n    profileFav: state.firebase.profile.favorites\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    addGem: fav => dispatch(saveGem(fav))\n  };\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Dependency);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport Utility from \"../../utility/Utility\";\nimport { Redirect } from \"react-router-dom\";\nimport DependencySearch from \"../search/DependencySeach\";\n\nclass FavoriteDetails extends Component {\n  render() {\n    const { auth, gems } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    const dependencies = gems.dependencies.development ? (\n      gems.dependencies.development.map((el, idx) => {\n        return (\n          <div key={idx}>\n            <DependencySearch el={el} />\n          </div>\n        );\n      })\n    ) : (\n      <div>Loading ruby...</div>\n    );\n\n    if (gems) {\n      return (\n        <div className=\"container section project-RubyGemDetails\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n              <Utility gem={gems} />\n              <h3>Dependencies</h3>\n              {dependencies}\n              <div />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container center\">\n          <p>Loading project...</p>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const ruby = state.firebase.profile.favorites;\n  const favGem = ruby ? ruby[id] : null;\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    gems: favGem,\n    profileFav: state.firebase.profile.favorites\n  };\n};\n\nexport default compose(\n  connect(mapState),\n  firestoreConnect(props => {\n    return [\n      {\n        collection: \"users\",\n        doc: props.auth.uid\n      }\n    ];\n  })\n)(FavoriteDetails);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navigation from \"./components/display/Navigation\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport RubyGemDetails from \"./components/projects/RubyGemDetails\";\nimport Login from \"./components/auth/Login\";\nimport SignUp from \"./components/auth/SignUp\";\nimport FavGems from \"./components/favorite/FavGems\";\nimport \"./App.css\";\nimport Dependency from \"./components/search/Dependency\";\nimport FavoriteDetails from \"./components/favorite/FavoriteDetails\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={RubyGemDetails} />\n            <Route path=\"/signin\" component={Login} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/favorite\" component={FavGems} />\n            <Route path=\"/favoritedetails/:id\" component={FavoriteDetails} />\n            <Route path=\"/dependency\" component={Dependency} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  authError: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      return {\n        ...state,\n        authError: action.error.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initialState = {\n  gems: [],\n  favoriteGem: [],\n  ruby: []\n};\nconst fetchingGemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_RUBY\":\n      return {\n        ...state,\n        gems: action.gems\n      };\n    case \"FETCHING_GEMS_ERROR\":\n      console.log(\"fetching error\");\n      return state;\n    case \"SAVE_GEM\":\n      return {\n        ...state,\n        favoriteGem: action.favorites\n      };\n    case \"SAVE_GEM_ERROR\":\n      console.log(\"save gem error\");\n      return state;\n    case \"REMOVE_GEM_SUCCESS\":\n      return {\n        ...state,\n        favoriteGem: action.remove\n      };\n    case \"REMOVE_GEM_FAIL\":\n      console.log(\"Removal failed\");\n      return state;\n    case \"FETCH_RUBY_DEPENDENCY\":\n      return {\n        ...state,\n        ruby: action.gem\n      };\n    case \"FETCHING_DEPENDENCY_ERROR\":\n      console.log(\"Dependency could not be fetched\");\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default fetchingGemReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n// Initialize Firebase\n\nvar config = {\n  apiKey: process.env.REACT_APP_GOOGLE_API,\n  authDomain: \"boilerplate-845c7.firebaseapp.com\",\n  databaseURL: \"https://boilerplate-845c7.firebaseio.com\",\n  projectId: \"boilerplate-845c7\",\n  storageBucket: \"boilerplate-845c7.appspot.com\",\n  messagingSenderId: process.env.REACT_APP_MESSENGER_API\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import authReducer from \"./authReducer\";\nimport fetchingGemReducer from \"./rubyReducer\";\nimport { combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport {\n  reactReduxFirebase,\n  getFirebase,\n  firebaseReducer\n} from \"react-redux-firebase\";\nimport fbConfig from \"../../config/fbConfig\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport reduxReset from \"redux-reset\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  ruby: fetchingGemReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\n//firebaseReducer will sync our auth status on firebase with our redux app on the state and pop it on the firebase object on the state\nexport const middleware = compose(\n  applyMiddleware(\n    logger,\n    thunkMiddleware.withExtraArgument({ getFirebase, getFirestore })\n  ),\n  reduxFirestore(fbConfig),\n  reactReduxFirebase(fbConfig, {\n    useFirestoreForProfile: true,\n    userProfile: \"users\",\n    attachAuthIsReady: true\n  }),\n  reduxReset()\n);\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./store/reducer/rootReducer\";\nimport { middleware } from \"./store/reducer/rootReducer\";\nimport { Provider } from \"react-redux\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"auth\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer, middleware);\n\nconst persistor = persistStore(store);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\nserviceWorker.unregister();\n"],"sourceRoot":""}